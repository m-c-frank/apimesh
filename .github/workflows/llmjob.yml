name: Process Issue and Generate Solutions

on:
  issues:
    types: [opened, reopened]

jobs:
  process-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Process Issue
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GH_PAT: ${{ secrets.GH_PAT }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          # Formulate the prompt
          PROMPT="${ISSUE_TITLE} (Issue Number: ${ISSUE_NUMBER}, Body: ${ISSUE_BODY})"
          echo "Prompt: $PROMPT"

          # Send a request to the OpenAI API
          RESPONSE=$(curl -s "https://api.openai.com/v1/chat/completions" \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $OPENAI_API_KEY" \
              -d "{\"model\": \"gpt-3.5-turbo\", \"messages\": [{\"role\": \"system\", \"content\": \"Task: Identify five distinct, efficient methods for resolving a specific problem or task. Prompt: 'List five different methods to address [specific issue or task]. Focus on approaches with the fewest steps. Detail the key steps and highlight the efficiency of each method.' Requirement: Responses should offer varied, straightforward solutions. Each method must be uniquely efficient, emphasizing minimalism in steps and process complexity.\"}, {\"role\": \"user\", \"content\": \"$PROMPT\"}]}"
          )
          echo "Response: $RESPONSE"

          # Extract the answer
          ANSWER=$(echo "$RESPONSE" | jq -r .choices[0].message.content)
          echo "Answer: $ANSWER"

          # Write the answer to a markdown file
          echo "$ANSWER" > SOLUTIONS_README.md
          
          echo "$GH_PAT" | gh auth login --with-token

          # Configure Git
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'

          # Create a unique branch name using the issue number
          BRANCH_NAME="${ISSUE_NUMBER}-llmjob"
          echo "Creating branch: $BRANCH_NAME"

          # Commit and push the changes
          git checkout -b $BRANCH_NAME
          git add SOLUTIONS_README.md
          git commit -m 'Add generated solutions README'
          git push --set-upstream origin $BRANCH_NAME

          # Authenticate GitHub CLI
          echo "$GH_PAT" | gh auth login --with-token
          git push origin $BRANCH_NAME
